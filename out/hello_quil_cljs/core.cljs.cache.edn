{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name hello-quil-cljs.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {get-angle {:protocol-inline nil, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 61, :column 7, :end-line 61, :end-column 16, :arglists (quote ([i denom]))}, :name hello-quil-cljs.core/get-angle, :variadic false, :file "src/hello_quil_cljs/core.cljs", :end-column 16, :method-params ([i denom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i denom]))}, draw-state {:protocol-inline nil, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 80, :column 7, :end-line 80, :end-column 17, :arglists (quote ([state]))}, :name hello-quil-cljs.core/draw-state, :variadic false, :file "src/hello_quil_cljs/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, update-state {:protocol-inline nil, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 68, :column 7, :end-line 68, :end-column 19, :arglists (quote ([state]))}, :name hello-quil-cljs.core/update-state, :variadic false, :file "src/hello_quil_cljs/core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, taal {:name hello-quil-cljs.core/taal, :file "src/hello_quil_cljs/core.cljs", :line 7, :column 1, :end-line 7, :end-column 10, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 7, :column 6, :end-line 7, :end-column 10}, :tag number}, part1 {:name hello-quil-cljs.core/part1, :file "src/hello_quil_cljs/core.cljs", :line 10, :column 1, :end-line 10, :end-column 11, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 10, :column 6, :end-line 10, :end-column 11}, :tag number}, tick {:protocol-inline nil, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 47, :column 7, :end-line 47, :end-column 11, :arglists (quote ([]))}, :name hello-quil-cljs.core/tick, :variadic false, :file "src/hello_quil_cljs/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, startpos {:name hello-quil-cljs.core/startpos, :file "src/hello_quil_cljs/core.cljs", :line 6, :column 1, :end-line 6, :end-column 14, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 6, :column 6, :end-line 6, :end-column 14}, :tag number}, pi2 {:name hello-quil-cljs.core/pi2, :file "src/hello_quil_cljs/core.cljs", :line 5, :column 1, :end-line 5, :end-column 9, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 5, :column 6, :end-line 5, :end-column 9}, :tag number}, states {:name hello-quil-cljs.core/states, :file "src/hello_quil_cljs/core.cljs", :line 41, :column 8, :end-line 41, :end-column 19, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 41, :column 13, :end-line 41, :end-column 19}, :tag any}, speed {:name hello-quil-cljs.core/speed, :file "src/hello_quil_cljs/core.cljs", :line 9, :column 1, :end-line 9, :end-column 11, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 9, :column 6, :end-line 9, :end-column 11}, :tag number}, hello-quil-cljs {:protocol-inline nil, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 103, :column 14, :end-line 103, :end-column 29, :export true, :arglists (quote ([]))}, :name hello-quil-cljs.core/hello-quil-cljs, :variadic false, :file "src/hello_quil_cljs/core.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, setup {:protocol-inline nil, :meta {:file "/home/kiran/src/github/hello-quil-cljs/src/hello_quil_cljs/core.cljs", :line 50, :column 7, :end-line 50, :end-column 12, :arglists (quote ([]))}, :name hello-quil-cljs.core/setup, :variadic false, :file "src/hello_quil_cljs/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:fn :color :phase :update :seconds :size :setup :middleware :host :tihai-i :host-id :no-start :ipos :draw :taal-i}, :order [:phase :taal-i :tihai-i :color :seconds :ipos :host :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}